security:
    
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
         App\Entity\User:
            algorithm: auto
    # Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_VETERINAIRE: ROLE_USER
        ROLE_EMPLOYE:     ROLE_USER

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            provider: app_user_provider
            lazy: true
            custom_authenticator: App\Security\LoginFormAuthenticator
            entry_point: App\Security\LoginFormAuthenticator
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: easyadmin
                always_use_default_target_path: true
            logout:
                path: app_logout
                # where to redirect after logout
                target: /login

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                # by default, the feature is enabled by checking a checkbox in the
                # login form, uncomment the following line to always enable it.
                #always_remember_me: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/veterinarian, roles: ROLE_VETERINAIRE }
        - { path: ^/employee, roles: ROLE_EMPLOYE }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
